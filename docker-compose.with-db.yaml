version: "3.8"

services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
      - pgadmin
    restart: unless-stopped

  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DATABASE_URL: ${DATABASE_URL}
        RESEND_API_KEY: ${RESEND_API_KEY}
        COHERE_API_KEY: ${COHERE_API_KEY}
    expose:
      - "3000"
    environment:
      - DATABASE_URL
      - RESEND_API_KEY
      - COHERE_API_KEY
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL
      - PGADMIN_DEFAULT_PASSWORD
      - SCRIPT_NAME=/pgadmin
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:14-alpine
    container_name: db
    restart: unless-stopped
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - db-data:/var/lib/postgresql/data
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db-data:
  pgadmin-data:
