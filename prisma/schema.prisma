// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider              = "zod-prisma-types"
  output                = "./generated/zod"
  useMultipleFiles      = true
  createInputTypes      = false
  relationModel         = true
  modelCase             = "camelCase"
  modelSuffix           = "Schema"
  useDecimalJs          = true
  prismaJsonNullability = true
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                       String    @id
  email                    String    @unique
  profileUrl               String?
  hashedPassword           String
  resetPasswordToken       String?   @unique
  resetPasswordTokenExpiry DateTime?
  username                 String
  sessions                 Session[]
  role                     Role      @default(USER)
  files                    File[]
  setting                  Setting?
  request                  Request[]
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  createdAt DateTime @default(now())
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model File {
  id          String  @id
  url         String
  blurDataUrl String?
  userId      String
  user        User    @relation(fields: [userId], references: [id])
}

model Setting {
  id        String   @id
  userId    String   @unique
  fontSize  String   @default("default")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Request {
  id            String         @id
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  type          String
  status        String
  userId        String
  user          User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  department    String
  jobRequest    JobRequest?
  venueRequest  VenueRequest?
  borrowRequest BorrowRequest?
}

model JobRequest {
  id          String  @id
  requestId   String  @unique
  request     Request @relation(fields: [requestId], references: [id])
  jobType     String
  description String?
  itemType    String?
}

model VenueRequest {
  id        String   @id
  requestId String   @unique
  request   Request  @relation(fields: [requestId], references: [id])
  venueName String
  startTime DateTime
  endTime   DateTime
}

model BorrowRequest {
  id         String   @id
  requestId  String   @unique
  request    Request  @relation(fields: [requestId], references: [id])
  itemType   String
  quantity   Int
  returnDate DateTime
}

enum Role {
  USER
  ADMIN
  SYSTEMADMIN
}
