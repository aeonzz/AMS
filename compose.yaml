version: "3.8"

services:
  # nginx:
  #   image: nginx:alpine
  #   container_name: nginx
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/conf.d/default.conf
  #   depends_on:
  #     - app
  #     - pgadmin
  #   restart: unless-stopped

  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DATABASE_URL: ${DATABASE_URL}
        RESEND_API_KEY: ${RESEND_API_KEY}
        COHERE_API_KEY: ${COHERE_API_KEY}
        PUSHER_APP_ID: ${PUSHER_APP_ID}
        PUSHER_SECRET: ${PUSHER_SECRET}
        NEXT_PUBLIC_PUSHER_KEY: ${NEXT_PUBLIC_PUSHER_KEY}
        NEXT_PUBLIC_PUSHER_CLUSTER: ${NEXT_PUBLIC_PUSHER_CLUSTER}
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL
      - RESEND_API_KEY
      - COHERE_API_KEY
      - PUSHER_APP_ID
      - PUSHER_SECRET
      - NEXT_PUBLIC_PUSHER_KEY
      - NEXT_PUBLIC_PUSHER_CLUSTER
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    environment:
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080" 

  studio:
    image: node:18-alpine
    working_dir: /app
    ports:
      - "5555:5555" 
    volumes:
      - .:/app
    command: ["npx", "prisma", "studio", "--port", "5555"]
    environment:
      DATABASE_URL: ${DATABASE_URL}

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL
      - PGADMIN_DEFAULT_PASSWORD
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  db:
    image: postgres:14-alpine
    container_name: db
    restart: unless-stopped
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - db-data:/var/lib/postgresql/data
    expose:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db-data:
  pgadmin-data:
