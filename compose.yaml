services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DATABASE_URL: re_HeZYNG4V_AZJpjitY2Z1ptGfXJuneVjRr
        RESEND_API_KEY: postgresql://postgres:Aeonz@db:5432/AMS
    ports:
      - "3000:3000"
    develop:
      watch:
        - path: ./package.json
          action: rebuild
        - path: ./next.config.mjs
          action: rebuild
        - path: ./package-lock.json
          action: rebuild
        - path: .
          target: /app
          action: sync
    environment:
      RESEND_API_KEY: re_HeZYNG4V_AZJpjitY2Z1ptGfXJuneVjRr
      DATABASE_URL: postgresql://postgres:Aeonz@db:5432/AMS
      UPLOAD_PATH: /app/uploads
    volumes:
      - uploads:/app/uploads
    depends_on:
      db:
        condition: service_healthy
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: christiancaneos1@gmail.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
  db:
    image: postgres
    container_name: db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Aeonz
      POSTGRES_DB: AMS
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    expose:
      - 5432
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 30s
      timeout: 10s
      retries: 5
volumes:
  db-data:
  pgadmin-data:
  uploads:
